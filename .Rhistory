# get packages
require(tidyverse); require(lme4); require(showtext); require(scico); require(pwr); require(car); require(ggpubr); require(rstatix); require(MASS); require(devtools); require(multcomp); require(svglite)
## secondary packages (requires devtools)
install_github("zachpeagler/multiFitR")
require(multiFitR)
install_github("zachpeagler/multiFitRgg")
require(multiFitRgg)
install_github("zachpeagler/ztils")
require(ztils)
a_palette <- "bilbao"
# super lazy way to make n+1 palettes
two_colors = scico(3, palette=a_palette)
four_colors = scico(5, palette=a_palette)
five_colors = scico(6, palette=a_palette)
true_two_col = scico(2, palette=a_palette)
ten_col = scico(10, palette=a_palette)
twelve_col = scico(13, palette=a_palette)
# add fonts
font_add_google("Open Sans", family = "open")
font_add_google("Montserrat", family = "mont")
# necessary to initialize imported fonts
showtext_auto()
# custom shapes
four_shapes = c(15,16,17,23)
## germination date
germdate <- "2024-05-01"
## treatment order
treatment_order <- c("Control",
"Transplantation",
"Germination",
"Germ+Trans")
## plant factor order
plant_order <- c("1 1", "1 2", "1 3", "1 4", "1 5", "1 6",
"1 7", "1 8", "1 9", "1 10", "1 11", "1 12",
"2 1", "2 2", "2 3", "2 4", "2 5", "2 6",
"2 7", "2 8", "2 9", "2 10", "2 11", "2 12",
"3 1", "3 2", "3 3", "3 4", "3 5", "3 6",
"3 7", "3 8", "3 9", "3 10", "3 11", "3 12",
"4 1", "4 2", "4 3", "4 4", "4 5", "4 6",
"4 7", "4 8", "4 9", "4 10", "4 11", "4 12")
## Load and clean Li-600 data
Li_data_file <- "https://raw.githubusercontent.com/zachpeagler/TomatoInoculants/refs/heads/main/data/TIP24_LI600.csv"
Li_data <- read.csv(Li_data_file, stringsAsFactors = T) %>%
mutate(Treatment = case_when(
Row==1~"Control",
Row==2~"Transplantation",
Row==3~"Germination",
Row==4~"Germ+Trans",
TRUE~NA)) %>%
filter(leak_pct<10, gsw>0) %>%
rename(Date_ref = Date) %>%
mutate(Date = parse_date_time(Date_ref, orders = "mdy"),
Time = parse_date_time(Time, orders = "T"),
DaysFromGermination = as.numeric(round(difftime(Date, germdate, units = c("days")), 0)),
plant_fac = as.factor(paste(Row, Pot)),
Treatment = factor(Treatment, levels = treatment_order),
logitPS2 = logit(PhiPS2, FALSE),
plant_fac = factor(plant_fac, levels = plant_order)
) %>%
group_by(DaysFromGermination) %>%
mutate(MinutesFromStart = round(difftime(Time, min(Time), units = "mins"), 4)) %>%
ungroup() %>%
mutate(
Time = format(Time, "%H:%M:%S")
)
# New dataframes of Li_data mean and sd for stomatal conductance (gsw) and Photosystem II efficiency (PhiPS2), grouped by treatment and plant
Li_data_stats_byplant <- Li_data %>%
group_by(Treatment, plant_fac) %>%
summarise_at(vars(gsw, logitPS2), list(mean=mean, sd=sd))
m_file <- "https://raw.githubusercontent.com/zachpeagler/TomatoInoculants/refs/heads/main/data/TIP24_Multispeq.csv"
m_data <- read.csv(m_file) %>%
mutate(Treatment = case_when(
Row=="A"~"Control",
Row=="B"~"Transplantation",
Row=="C"~"Germination",
Row=="D"~"Germ+Trans",
TRUE~NA),
Row_num = case_when(
Row=="A"~ 1,
Row=="B"~ 2,
Row=="C"~ 3,
Row=="D"~ 4,
TRUE~NA),
plant_fac = as.factor(paste(Row_num, Pot)),
Date = as.Date(time, "%m/%d/%Y"),
Time = parse_date_time(time, "%m/%d/%Y %H:%M %p"),
DaysFromGermination = as.numeric(round(difftime(Date, germdate, units = c("days")), 0)),
Treatment = factor(Treatment, levels = treatment_order),
plant_fac = factor(plant_fac, levels = plant_order),
logitPS2 = logit(Phi2, FALSE),
logitFvPFmP = logit(FvP_over_FmP, FALSE)
) %>%
group_by(DaysFromGermination) %>%
mutate(MinutesFromStart = round(difftime(Time, min(Time), units = "mins"), 4)) %>%
ungroup() %>%
mutate(
Time = format(Time, "%H:%M:%S")
)
m_data_stats_byplant <- m_data %>%
group_by(Treatment, plant_fac) %>%
summarise_at(vars(logitFvPFmP, logitPS2), list(mean=mean, sd=sd))
## Load and clean TIP24 fruit data
Fl_data_file <- "https://raw.githubusercontent.com/zachpeagler/TomatoInoculants/refs/heads/main/data/TIP24_Fruit.csv"
Fl_data <- read.csv(Fl_data_file, stringsAsFactors = T) %>%
filter(mass >0) %>%
mutate(Treatment = case_when(
row==1~"Control",
row==2~"Transplantation",
row==3~"Germination",
row==4~"Germ+Trans",
TRUE~NA),
fruit = 1,
date_analysis_ref = date_analysis,
date_harvest_ref = date_harvest,
date_analysis = parse_date_time(date_analysis_ref, orders = "mdy"),
date_harvest = parse_date_time(date_harvest_ref, orders="mdy"),
DaysFromHarvestToAnalysis = as.numeric(round(difftime(date_analysis,
date_harvest, units = c("days")), 0)),
DaysFromGermination = as.numeric(round(difftime(date_analysis,
germdate, units = c("days")), 0)),
plant_fac = as.factor(paste(row, plant)),
Treatment = factor(Treatment, levels = treatment_order),
plant_fac = factor(plant_fac, levels = plant_order),
mass_bin = cut(mass, breaks=10),
BER_fac = as.factor(BER),
fungus_fac = as.factor(fungus),
cracking_fac = as.factor(cracking),
ripeness = abs(1 - round(penetrometer/max(na.omit(penetrometer)), 2))
)
## Filter to only rows where there is no BER and sugar is greater than 0
Fl_data_no_BER <- Fl_data %>%
filter(BER==0 & sugar_avg > 0)
## New dataframes, filtering to only those where BER is equal to 1
Fl_data_BER <- Fl_data %>%
filter(BER==1)
## Make summary dataframe with mean and sd of mass and sugar by plant.
Fl_means_byplant <- Fl_data_no_BER %>%
group_by(Treatment, plant_fac) %>%
summarise_at(vars(mass, sugar_avg), list(mean=mean, sd=sd))
## Sum the fruit, BER, fungus, cracking, and mass by treatment group, then get probs of each factor.
Fl_data_summary <- Fl_data %>%
group_by(Treatment) %>%
summarise_at(vars(fruit, mass, BER, fungus, cracking, mass),
list(sum=sum)) %>%
mutate(pBER = round(BER_sum/fruit_sum, 4),
pfungus = round(fungus_sum/fruit_sum, 4),
pcracking = round(cracking_sum/fruit_sum, 4)
)
## Sum the fruit, BER, fungus, and cracking by mass bin, then get probs of each factor.
Fl_data_mb <- Fl_data %>%
group_by(Treatment, mass_bin) %>%
summarise_at(vars(fruit, mass, BER, fungus, cracking), list(sum=sum)) %>%
mutate(pBER = round(BER_sum/fruit_sum, 4),
pfungus = round(fungus_sum/fruit_sum, 4),
pcracking = round(cracking_sum/fruit_sum, 4)
)
## Sum the fruit, BER, fungus, and cracking by plant, then get probs of each factor.
Fl_sum_byplant <- Fl_data %>%
group_by(Treatment, plant) %>%
summarise_at(vars(fruit, mass, BER, fungus, cracking), list(sum=sum)) %>%
mutate(pBER = round(BER_sum/fruit_sum, 4),
pfungus = round(fungus_sum/fruit_sum, 4),
pcracking = round(cracking_sum/fruit_sum, 4)
)
Fl_sum_means <- Fl_sum_byplant %>%
group_by(Treatment) %>%
summarise_at(vars(fruit_sum, mass_sum, pBER), list(mean=mean, sd=sd))
Fl_means <- Fl_data %>%
group_by(Treatment) %>%
summarise_at(vars(mass), list(mean=mean, sd=sd))
mod_Phi2_dfg_LI600_s <- summary(mod_Phi2_dfg_LI600 <- (lm(
logitPS2 ~ Treatment + ( 1 | DaysFromGermination),
data = Li_data)))
print(mod_Phi2_dfg_LI600_s)
mod_Phi2_qamb_LI600_s <- summary(mod_Phi2_dfg_LI600 <- (lm(
logitPS2 ~ Treatment + ( 1 | Qamb),
data = Li_data)))
print(mod_Phi2_qamb_LI600_s)
mod_Phi2_dfg_Mult_s <- summary(mod_Phi2_dfg_Mult <- (lm(
logitPS2 ~ Treatment + ( 1 | DaysFromGermination),
data = m_data)))
print(mod_Phi2_dfg_Mult_s)
mod_Phi2_qamb_Mult_s <- summary(mod_Phi2_qamb_Mult <- (lm(
logitPS2 ~ Treatment + (1| Light.Intensity..PAR.),
data = m_data)))
print(mod_Phi2_qamb_Mult_s)
mod_Phi2_qamb_Mult_s <- summary(mod_Phi2_qamb_Mult <- (lm(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data)))
View(m_data)
mod_Phi2_qamb_Mult_s <- summary(mod_Phi2_qamb_Mult <- (lm(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data)))
mod_Phi2_qamb_Mult_s <- summary(mod_Phi2_qamb_Mult <- (lm(
logitPS2 ~ Treatment + Light.Intensity..PAR.,
data = m_data)))
print(mod_Phi2_qamb_Mult_s)
mod_Phi2_qamb_Mult_s <- summary(mod_Phi2_qamb_Mult <- (lm(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data)))
mod_Phi2_qamb_Mult_s <- summary(mod_Phi2_qamb_Mult <- (lmer(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data)))
mod_Phi2_qamb_Mult <- (lmer(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data)))
mod_Phi2_qamb_Mult <- (lmer(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data))
require(lmerTest)
mod_Phi2_qamb_Mult <- (lmer(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data))
require(lme4)
mod_Phi2_qamb_Mult <- (lmer(
logitPS2 ~ Treatment + Light.Intensity..PAR. + (1 | plant_fac),
data = m_data))
# compare Li-600 and MultispeQ - PhiPS2
## get mean and sd ps2 at each treatment and each date
Li_ps2_means <- Li_data %>%
group_by(Treatment, Date) %>%
summarize_at(vars(PhiPS2), list(mean=mean, median=median, sd=sd))
m_ps2_means <- m_data %>%
group_by(Treatment, Date) %>%
summarize_at(vars(Phi2), list(mean=mean, median=median, sd=sd))
m_ps2_means <- m_ps2_means %>%
filter(Date %in% Li_ps2_means$Date) %>%
subset(as.character(Date) != "2024-07-09")
Li_ps2_means <- Li_ps2_means %>%
filter(Date %in% m_ps2_means$Date) %>%
subset(as.character(Date) != "2024-07-09")
Li_ps2_means$m_mean <- m_ps2_means$mean
Li_ps2_means$m_median <- m_ps2_means$median
Li_ps2_means$m_sd <- m_ps2_means$sd
# build a new dataframe for PhiPS2 models
## use time, minutesfromstart, date, row, pot, plant_fac, treatment, ambient light, ambient temp,leaf temp, ambient pressure, ambient humidity, daysfromgermination, PhiPS2, logitPS2, and device
PS2_joined <- Li_data[,c(2,119,115,7,8,117,114,34,35,36,32,40,116,28,118)] %>% mutate(
Device = "Li600"
) %>% rename(AmbientLight = Qamb,
AmbientPressure = P_atm,
AmbientHumidity = rh_s,
AmbientTemperature = Tref,
LeafTemperature = Tleaf,
Plant = plant_fac) %>%
mutate(AmbientPressure = AmbientPressure * 10)
m_temp <- m_data[,c(67,71,66,64,7,65,63,12,27,11,10,34,68,41,69)] %>% mutate(
Device = "MultispeQ") %>%
rename(AmbientLight = Light.Intensity..PAR.,
AmbientPressure = Ambient.Pressure,
AmbientHumidity = Ambient.Humidity,
AmbientTemperature = Ambient.Temperature,
LeafTemperature = Leaf.Temperature,
Row = Row_num,
PhiPS2 = Phi2,
Plant = plant_fac)
PS2_joined <- rbind(PS2_joined, m_temp)
View(PS2_joined)
plot(PS2_joined[, Device == "Li600"]$PhiPS2, PS2_joined[, Device == "MultispeQ"]$PhiPS2)
